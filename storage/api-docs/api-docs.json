{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Task API",
        "description": "Task Management API Documentation",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a list of tasks with optional filters",
                "operationId": "d65f8818ec696dad558b47939034f1c5",
                "parameters": [
                    {
                        "name": "status_id",
                        "in": "query",
                        "description": "Filter tasks by status ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "due_date_from",
                        "in": "query",
                        "description": "Filter tasks with a due date from this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-03-10"
                        }
                    },
                    {
                        "name": "due_date_to",
                        "in": "query",
                        "description": "Filter tasks with a due date up to this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-03-20"
                        }
                    },
                    {
                        "name": "assigned_to",
                        "in": "query",
                        "description": "Filter tasks assigned to a specific user ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaskResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "f803ebdb2300acdb7e93bbe8d0b9a2e8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tasks/{taskId}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get details of a specific task",
                "operationId": "4059998bfc59352f868a97dd9fb18879",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID of the task to retrieve details",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update an existing task",
                "operationId": "712e1534f85063f8aa5fcba998d59a58",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID of the task to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tasks/{taskId}/assign": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Assign a task to a user",
                "operationId": "9964635adb79997849f5903b51a59741",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID of the task to assign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task assigned successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tasks/{taskId}/status": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update the status of a task",
                "operationId": "55f43e9543afafd32d80898e3c0e31a1",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID of the task to update status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaskStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status updated successfully"
                    },
                    "400": {
                        "description": "Cannot complete task until dependencies are met"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AssignTaskRequest": {
                "title": "Assign Task Request",
                "description": "Request body for assigning a task",
                "required": [
                    "assigned_user_id"
                ],
                "properties": {
                    "assigned_user_id": {
                        "description": "The ID of the user to whom the task is assigned",
                        "type": "integer",
                        "example": 3
                    }
                },
                "type": "object"
            },
            "StoreTaskRequest": {
                "title": "Store Task Request",
                "description": "Request body for creating a task",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "New Task"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a sample task description.",
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-03-15",
                        "nullable": true
                    },
                    "assigned_user_id": {
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "parent_task_id": {
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateTaskRequest": {
                "title": "Update Task Request",
                "description": "Request body for updating a task",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Updated Task Name",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated task description.",
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-01",
                        "nullable": true
                    },
                    "assigned_user_id": {
                        "type": "integer",
                        "example": 3,
                        "nullable": true
                    },
                    "parent_task_id": {
                        "type": "integer",
                        "example": 7,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateTaskStatusRequest": {
                "title": "Update Task Status Request",
                "description": "Request body for updating a task's status",
                "required": [
                    "status_id"
                ],
                "properties": {
                    "status_id": {
                        "description": "The ID of the new status",
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "TaskResource": {
                "title": "Task Resource",
                "description": "Task details",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Fix Bug #123"
                    },
                    "description": {
                        "type": "string",
                        "example": "Resolve API authentication issue"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-03-15"
                    },
                    "status_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "assigned_user_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskResource"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Tasks",
            "description": "Task management endpoints"
        }
    ],
    "security": [
        {
            "sanctum": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    ]
}